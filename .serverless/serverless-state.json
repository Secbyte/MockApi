{
  "service": {
    "service": "virtual-clinical-datastore",
    "serviceObject": {
      "name": "virtual-clinical-datastore"
    },
    "provider": {
      "stage": "test-cr",
      "region": "eu-west-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "dotnetcore2.1",
      "stackName": "test-cr-mock-api-stack",
      "apiName": "test-cr-mock-api",
      "bucketName": "test-cr-mock-api-config",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "arn:aws:s3:::*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "DataDashmockLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/virtual-clinical-datastore-test-cr-data-mock"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "test-cr",
                        "virtual-clinical-datastore",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/virtual-clinical-datastore-test-cr-data-mock:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/virtual-clinical-datastore-test-cr-data-mock:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "virtual-clinical-datastore",
                    "test-cr",
                    "eu-west-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "DataDashmockLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/virtual-clinical-datastore/test-cr/1554294249311-2019-04-03T12:24:09.311Z/./bin/mock-api.zip"
              },
              "FunctionName": "virtual-clinical-datastore-test-cr-data-mock",
              "Handler": "SecByte.MockApi.Server::SecByte.MockApi.Server.LambdaEntryPoint::FunctionHandlerAsync",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "dotnetcore2.1",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "ConfigurationSource": "s3:test-cr-mock-api-config:setup.json"
                }
              }
            },
            "DependsOn": [
              "DataDashmockLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DataDashmockLambdaVersion79b66HByZs1WZcltghSgbRkcSFJ2jDcoh1QF6kkk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DataDashmockLambdaFunction"
              },
              "CodeSha256": "eo+Rtt1022BMnUr/cL8Q3M47aB6vpd4Wa+Lp7VhJdfQ="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "test-cr-mock-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DataDashmockLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1554294249341": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "test-cr"
            },
            "DependsOn": [
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "DataDashmockLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DataDashmockLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "S3ClinicalDataSource": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "test-cr-mock-api-config"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "DataDashmockLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DataDashmockLambdaVersion79b66HByZs1WZcltghSgbRkcSFJ2jDcoh1QF6kkk"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/test-cr"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "data-mock": {
        "handler": "SecByte.MockApi.Server::SecByte.MockApi.Server.LambdaEntryPoint::FunctionHandlerAsync",
        "environment": {
          "ConfigurationSource": "s3:test-cr-mock-api-config:setup.json"
        },
        "events": [
          {
            "http": {
              "path": "{proxy+}",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": "./bin/mock-api.zip"
        },
        "name": "virtual-clinical-datastore-test-cr-data-mock",
        "memory": 1024,
        "timeout": 6,
        "runtime": "dotnetcore2.1",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "S3ClinicalDataSource": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "test-cr-mock-api-config"
          }
        }
      },
      "Outputs": {}
    },
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/virtual-clinical-datastore/test-cr/1554294249311-2019-04-03T12:24:09.311Z",
    "artifact": ""
  }
}